// Generated by Dagger (https://dagger.dev).
package com.hotmart.locations.core.http;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Converter;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HttpManager_Factory implements Factory<HttpManager> {
  private final Provider<OkHttpClient> httpClientProvider;

  private final Provider<Converter.Factory> converterFactoryProvider;

  public HttpManager_Factory(Provider<OkHttpClient> httpClientProvider,
      Provider<Converter.Factory> converterFactoryProvider) {
    this.httpClientProvider = httpClientProvider;
    this.converterFactoryProvider = converterFactoryProvider;
  }

  @Override
  public HttpManager get() {
    return newInstance(httpClientProvider.get(), converterFactoryProvider.get());
  }

  public static HttpManager_Factory create(Provider<OkHttpClient> httpClientProvider,
      Provider<Converter.Factory> converterFactoryProvider) {
    return new HttpManager_Factory(httpClientProvider, converterFactoryProvider);
  }

  public static HttpManager newInstance(OkHttpClient httpClient,
      Converter.Factory converterFactory) {
    return new HttpManager(httpClient, converterFactory);
  }
}
